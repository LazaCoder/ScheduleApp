package com.example.scheduleapp

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.*
import androidx.compose.material3.Button
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.RectangleShape
import androidx.compose.ui.graphics.Shape
import androidx.compose.ui.graphics.graphicsLayer
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.text.style.TextDecoration
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

@Composable
fun ClassPage() {
    Surface(modifier = Modifier.fillMaxSize(), color = Color(0xFFF0F4FA)) {
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(horizontal = 16.dp),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {

            // Title Section
            Text(
                text = "Ugradbeni raƒçunalni sustavi \n (250)",
                style = TextStyle(
                    fontSize = 22.sp,
                    fontWeight = FontWeight.Bold,
                    color = Color.Black,
                    textAlign = TextAlign.Center
                )
            )
            
            Spacer(modifier = Modifier.height(8.dp))
            
            Text(
                text = "January 14th",
                style = TextStyle(
                    fontSize = 16.sp,
                    fontWeight = FontWeight.Normal,
                    color = Color.Black,
                    fontFamily = Poppins
                )
            )

            Spacer(modifier = Modifier.height(40.dp))

            Text(text = "Scan the QR code generated by the student on their phone",
                textAlign = TextAlign.Center,
                style = TextStyle(
                    fontSize = 16.sp,
                    fontFamily = Poppins,
                    fontWeight = FontWeight.Normal,
                    color = Color.Black
                ),
                modifier = Modifier.padding(horizontal = 16.dp)

                )

            // QR Code
            Box(
                modifier = Modifier
                    .size(250.dp) // Placeholder size for QR Code
                    ,
                contentAlignment = Alignment.Center
            ) {
                // Placeholder QR Code Image
                Image(
                    painter = painterResource(id = R.drawable.qr_code),
                    contentDescription = "QR Code",
                    modifier = Modifier.fillMaxSize(0.8f)
                )
            }


            // Scan Button
            Button(
                onClick = { /* Action for scanning QR Code */ },
                modifier = Modifier
                    .width(170.dp)
                    .height(65.dp)
                    .shadow(elevation = 12.dp),
                shape = RectangleShape
            ) {
                Text(
                    text = "Scan QR Code",
                    style = TextStyle(
                        fontSize = 16.sp,
                        fontWeight = FontWeight.Bold,
                        color = Color.White,
                        fontFamily = Poppins
                    )
                )
            }

            Spacer(modifier = Modifier.height(32.dp))

            // "Having issues?" Section
            Column(
                modifier = Modifier.align(alignment = Alignment.CenterHorizontally)


            ) {


                Box(modifier = Modifier
                    .size(56.dp) // Adjust size as needed
                    .shadow(
                        elevation = 4.dp, // Blur efekt senke
                        shape = CircleShape, // Oblik senke (krug)
                        clip = false
                    )
                    .clip(CircleShape)
                    .background(Color.White) // Background color
                    .padding(12.dp)
                    .align(Alignment.CenterHorizontally)

                   ,

                    contentAlignment = Alignment.Center)
                {
                    Icon(
                        painter = painterResource(id = R.drawable.edit_icon),
                        contentDescription = "Edit",
                        modifier = Modifier
                            .size(32.dp)

                    )

                }
                Spacer(modifier = Modifier.height(16.dp))
                Text(
                    text = "Having issues?",
                    style = TextStyle(
                        fontSize = 16.sp,
                        fontWeight = FontWeight.Normal,
                        color = Color.Black,
                        textDecoration = TextDecoration.Underline
                    )
                )
            }
        }
    }
}
