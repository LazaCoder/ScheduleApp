package com.example.scheduleapp

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material3.Icon
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.RectangleShape
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
// import androidx.compose.ui.text.font.FontFamily // Uncomment if you have Poppins defined
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.text.style.TextDecoration
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavHostController

@Composable
fun ClassPage(
    subjectName: String,
    subjectCode: String,
    startDate: String,
    navController: NavHostController
) {
    Surface(modifier = Modifier.fillMaxSize(), color = Color(0xFFF0F4FA)) {
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(horizontal = 16.dp),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            // Title Section using the passed data
            Text(
                text = "$subjectName \n ($subjectCode)",
                style = TextStyle(
                    fontSize = 22.sp,
                    fontWeight = FontWeight.Bold,
                    color = Color.Black,
                    textAlign = TextAlign.Center,
                    // fontFamily = Poppins  // Uncomment if defined
                )
            )

            Spacer(modifier = Modifier.height(8.dp))

            // Display the start date
            Text(
                text = startDate,
                style = TextStyle(
                    fontSize = 16.sp,
                    fontWeight = FontWeight.Normal,
                    color = Color.Black,
                    // fontFamily = Poppins  // Uncomment if defined
                )
            )

            Spacer(modifier = Modifier.height(40.dp))

            // Instruction Section
            Text(
                text = "Scan the QR code generated by the student on their phone",
                textAlign = TextAlign.Center,
                style = TextStyle(
                    fontSize = 16.sp,
                    // fontFamily = Poppins,  // Uncomment if defined
                    fontWeight = FontWeight.Normal,
                    color = Color.Black
                ),
                modifier = Modifier.padding(horizontal = 16.dp)
            )

            // QR Code Section
            Box(
                modifier = Modifier.size(250.dp),
                contentAlignment = Alignment.Center
            ) {
                Image(
                    painter = painterResource(id = R.drawable.qr_code),
                    contentDescription = "QR Code",
                    modifier = Modifier.fillMaxSize(0.8f)
                )
            }

            // Scan Button (Assuming you have defined QRScannerButton())
            QRScannerButton()

            Spacer(modifier = Modifier.height(32.dp))

            // "Having issues?" Section with Edit button
            Column(
                modifier = Modifier.align(Alignment.CenterHorizontally)
            ) {
                Box(
                    modifier = Modifier
                        .size(56.dp)
                        .shadow(elevation = 4.dp, shape = CircleShape, clip = false)
                        .clip(CircleShape)
                        .background(Color.White)
                        .padding(12.dp)
                        .clickable {
                            // Navigate to StudentAttendancePage when tapped
                            navController.navigate("studentAttendancePage")
                        }
                        .align(Alignment.CenterHorizontally),
                    contentAlignment = Alignment.Center
                ) {
                    Icon(
                        painter = painterResource(id = R.drawable.edit_icon),
                        contentDescription = "Edit",
                        modifier = Modifier.size(32.dp)
                    )
                }
                Spacer(modifier = Modifier.height(16.dp))
                Text(
                    text = "Having issues?",
                    style = TextStyle(
                        fontSize = 16.sp,
                        fontWeight = FontWeight.Normal,
                        color = Color.Black,
                        textDecoration = TextDecoration.Underline
                    )
                )
            }
        }
    }
}
